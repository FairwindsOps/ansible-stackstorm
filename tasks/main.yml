---
# tasks file for st2

- name: install misc packages
  apt:
    name: "{{ item }}"
  become: yes
  become_user: root
  with_items:
    - python-pip
  tags: apt

- name: install misc packages
  pip:
    name: "{{ item }}"
  become: yes
  become_user: root
  with_items:
    - boto
    - ansible
    - awscli
  tags: install

- name: get setup script from nodesource.com
  get_url:
    url: 'https://deb.nodesource.com/setup_4.x'
    dest: /tmp/setup_4.x
    mode: 0775
  tags: install

- name: run setup
  shell:
    /tmp/setup_4.x
  args:
    creates: /etc/apt/sources.list.d/nodesource.list
  become: yes
  become_user: root
  tags: install

- name: install nodejs
  apt:
    name: "{{ item }}"
  become: yes
  become_user: root
  with_items:
    - nodejs
    - st2chatops
  tags: install

- lineinfile:
    dest: /opt/stackstorm/chatops/st2chatops.env
    line: "export HUBOT_ADAPTER=slack"
  become: yes
  become_user: root
  tags: install

- lineinfile:
    dest: /opt/stackstorm/chatops/st2chatops.env
    line: "export HUBOT_SLACK_TOKEN={{ slack_token }}"
  become: yes
  become_user: root
  tags: install

- name: create user
  become: yes
  become_user: root
  user:
    name: deploy
    uid:  2001
    shell: /bin/bash
  tags: user

- name: create .bash_profile
  template:
    dest: /home/deploy/.bash_profile
    src: bash_profile.j2
    mode:  0644
    owner: deploy
  become: yes
  become_user: root
  tags: user2

- name: create ssh dir
  file:
    dest: /home/deploy/.ssh
    state: directory
    mode:  0700
    owner: deploy
  become: yes
  become_user: root
  tags: user

- name: populate .ssh dir
  s3:
    dest: "/home/deploy/.ssh/{{ item }}"
    mode: get
    bucket: "{{ secrets_bucket }}"
    object: "users/{{ item }}"
  with_items:
    - deploy_private.key
    - external_private.key
  become: yes
  changed_when: false
  tags: user

- name: ensure permissions on keys
  file:
    path: "/home/deploy/.ssh/{{ item }}"
    state: 'file'
    owner: deploy
    group: deploy
    mode: 0400
  with_items:
    - deploy_private.key
    - "{{ s2_external_private_key }}"
  become: yes
  become_user: root
  tags: user

- name: populate .ssh dir with authorized_keys
  s3:
    dest: '/home/deploy/.ssh/authorized_keys'
    mode: get
    bucket: "{{ secrets_bucket }}"
    object: 'users/deploy_public.key'
  become: yes
  changed_when: false
  tags: user

- name: set ssh config
  template:
    src: config.j2
    dest: /home/deploy/.ssh/config
    owner: deploy
    group: deploy
  become: yes
  become_user: root
  tags: user

- name: cron restart hubot
  cron:
    name: "hubot restart"
    minute: "0"
    hour: "*/2"
    job: "service st2chatops start"
    user: root
  become: yes
  become_user: root
  tags: cron

# Some magic needs to be run to get the slack connection working
# service st2chatops restart
# st2ctl restart --register-all

- name: create /opt/omnia/infrastructure
  file:
    dest: /opt/omnia/infrastructure
    state: directory
    owner: deploy
    group: deploy
  become: yes
  become_user: root
  tags: omnia

- apt_repository:
    repo: 'ppa:ansible/ansible'
  become: yes
  become_user: root
  tags: ansible

- name: install misc packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
  become: yes
  become_user: root
  with_items:
    - software-properties-common
    - ansible
  tags: ansible

- name: git clone infra repo
  git:
    repo: "{{st_infrastructure_repo}}"
    version: "{{st_infrastructure_version}}"
    dest: /opt/omnia/infrastructure
    accept_hostkey: true
  become: yes
  become_user: deploy
  tags: omnia
  ignore_errors: yes

- file:
    dest: /home/deploy/.ssh/id_rsa
    src: deploy_private.key
    state: link
    owner: deploy
    group: deploy
  become: yes
  become_user: root
  tags: user

- name: copy st2.conf
  template:
    src: st2.conf.j2
    dest: /etc/st2/st2.conf
    owner: root
    group: root
    mode: 0644
  notify: restart stackstorm
  become: yes
  become_user: root
  tags: stack-setup

- include: 2.yml
